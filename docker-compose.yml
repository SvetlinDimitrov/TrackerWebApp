version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
      - zookeeper-secrets:/etc/zookeeper/secrets
  authBroker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: authBroker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://authBroker:29092,EXTERNAL://authBroker:9092
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka-secrets:/etc/kafka/secrets
      - kafka-data:/var/lib/kafka/data
  recordBroker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: recordBroker
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://recordBroker:29093,EXTERNAL://recordBroker:9093
      KAFKA_LISTENERS: INTERNAL://:29093,EXTERNAL://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka-secrets2:/etc/kafka/secrets
      - kafka-data2:/var/lib/kafka/data
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
  mongoDB:
    image: mongo
    container_name: mongoDB
    ports:
      - "27017:27017"
    volumes:
      - ./runProjectConfig/mongo_food_data:/data/db
      - mongodb-config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
  discovery-server:
    image: svetlindimitrov/discovery-server-tracker-app
    container_name: discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
    ports:
      - "8761:8761"
  gateway-server:
    image: svetlindimitrov/gateway-server-tracker-app
    container_name: gateway-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    depends_on:
      - zipkin
      - discovery-server
      - authBroker
  auth-server:
    image: svetlindimitrov/auth-server-tracker-app
    container_name: auth-server
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mongoDB
      - gateway-server
      - discovery-server
      - authBroker
  food-server:
    image: svetlindimitrov/food-server-tracker-app
    container_name: food-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mongoDB
      - discovery-server
      - gateway-server
      - authBroker
  record-server:
    restart: always
    image: svetlindimitrov/record-server-tracker-app
    container_name: record-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mongoDB
      - gateway-server
      - discovery-server
      - recordBroker
      - authBroker
  storage-server:
    restart: always
    image: svetlindimitrov/storage-server-tracker-app
    container_name: storage-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mongoDB
      - gateway-server
      - discovery-server
      - record-server
      - recordBroker
  achievement-server:
    image: svetlindimitrov/achievement-server-tracker-app
    container_name: achievement-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - mongoDB
      - gateway-server
      - discovery-server
  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./runProjectConfig/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    depends_on:
      - prometheus
  react-app:
    image: svetlindimitrov/react-client-app
    container_name: react-app
    restart: always
    ports:
      - '3001:80'
    depends_on:
      - discovery-server
      - gateway-server
      - auth-server
      - food-server
      - record-server
      - storage-server
      - achievement-server
volumes:
  mongodb-config:
  kafka-data:
  kafka-data2:
  kafka-secrets:
  kafka-secrets2:
  zookeeper-data:
  zookeeper-log:
  zookeeper-secrets:
  prometheus-data:
  grafana-data:
